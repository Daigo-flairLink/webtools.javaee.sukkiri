<%@ jet package="org.eclipse.jst.j2ee.ejb" 
	imports="org.eclipse.jst.j2ee.ejb.internal.operations.* java.util.* " 
	class="MessageDrivenBeanTemplate" 
%><%@ include file="messageDrivenBeanHeader.template" %>
@MessageDriven
<%
Map<String, String> params = model.getClassAnnotationParams();
if (!params.isEmpty()) { 
%>(<%
  Set<String> keys = params.keySet();
  boolean needNewLine = keys.contains(CreateMessageDrivenBeanTemplateModel.ATT_ACTIVATION_CONFIG);
  boolean needComma = false;
  for (String key : keys) {
    if (needComma) { 
    	%>, <%
    	if (needNewLine) {
    		%>
		
<%
		} 
    }
    String value = params.get(key);
    if (key.equals(CreateMessageDrivenBeanTemplateModel.ATT_ACTIVATION_CONFIG)) {
		%>
		activationConfig = { @ActivationConfigProperty(
				propertyName = "destinationType", propertyValue = "<%=value%>"
		) }<%
	} else {
    	%><%=key%> = <%=value%><%
    }
    needComma = true;
  } %>)
<%}

if (!model.isContainerType()) {%>
@TransactionManagement(TransactionManagementType.BEAN)<%
}%>

<%if (model.isPublic()) {%>public<%}%> <%if (model.isAbstract()) {%>abstract <%}%><%if (model.isFinal()) {%>final <%}
%>class <%=model.getClassName()%><%
String superClass = model.getSuperclassName();
if (superClass.trim().length() > 0) {%> extends <%=superClass%><%}
 List<String> interfaces = model.getInterfaces(); 
 if (interfaces.size() > 0) {%> implements <%}
 for (int i = 0; i < interfaces.size(); i++) {
   String INTERFACE = (String) interfaces.get(i);
   if (i > 0) { %>, <% } %><%=INTERFACE%><% } %> {
<%
if (model.shouldImplementAbstractMethods()) {
Collection<Method> unimplementedMethods = model.getUnimplementedMethods();
if (model.isJMS()) { %>
	
	/**
     * @see MessageListener#onMessage(Message)
     */
    public void onMessage(Message message) {
        // TODO Auto-generated method stub
        
    }
<%}
for (Method method : unimplementedMethods) { %>

	/**
     * @see <%=method.getContainingJavaClass()%>#<%=method.getName()%>(<%=method.getParamsForJavadoc()%>)
     */
    public <%=method.getReturnType()%> <%=method.getName()%>(<%=method.getParamsForDeclaration()%>) {
        // TODO Auto-generated method stub
<% String defaultReturnValue = method.getDefaultReturnValue();
	if (defaultReturnValue != null) { %>
		return <%=defaultReturnValue%>;
<%  } %>
    }
<% }} %>

}
